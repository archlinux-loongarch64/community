# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Jonas Heinrich <onny@project-insanity.org>

pkgname=nextcloud-app-deck
_name=deck
pkgver=1.6.1
pkgrel=1
# upstream doesn't adhere to semver:
# https://github.com/nextcloud/deck/issues/1197
epoch=1
pkgdesc="Kanban style organization tool aimed at personal planning and project organization"
arch=(any)
url="https://github.com/nextcloud/deck"
license=(AGPL3)
groups=(nextcloud-apps)
makedepends=(nextcloud ripgrep yq)
source=(https://github.com/nextcloud-releases/$_name/releases/download/v$pkgver/$_name-v$pkgver.tar.gz)
sha512sums=('7e773ad11f1039e198af05fa1748b5b79bc5d9082720d18ca9e926a7ed330b8650e71d2af834c5df244242c817c1e5b133a499ce1c69a7b235619642a212bee3')
b2sums=('18b28a4305f19e6c2905b0e928d64bbfc471c9aa2b3c4f7430fe001341f2381a8f5acb740c3f61777d3b16cb9a1f7373f13b83993acc2624c6620bf3d38ecb20')

_get_nextcloud_versions() {
  _app_min_major_version="$(xq '.info.dependencies.nextcloud["@min-version"]' "${_name}/appinfo/info.xml"| sed 's/"//g')"
  _app_max_major_version="$(xq '.info.dependencies.nextcloud["@max-version"]' "${_name}/appinfo/info.xml"| sed 's/"//g')"
  _app_max_major_version=$(expr ${_app_max_major_version} + 1)
}

_get_php_versions() {
  _app_min_php="$(xq '.info.dependencies.php["@min-version"]' "$_name/appinfo/info.xml"| sed 's/"//g')"
  _app_max_php="$(xq '.info.dependencies.php["@max-version"]' "$_name/appinfo/info.xml"| sed 's/"//g')"
}

check() {
  local _app_min_major_version
  local _app_max_major_version
  _get_nextcloud_versions
  _get_php_versions

  local _nextcloud_major_version="$(rg "OC_Version = " /usr/share/webapps/nextcloud/version.php |cut -d'(' -f2| cut -d ',' -f1)"
  if [[ "$(vercmp "${_nextcloud_major_version}" "${_app_min_major_version}")" -lt 0 ]] || [[ "$(vercmp "${_nextcloud_major_version}" "${_app_max_major_version}")" -gt 0 ]] ; then
    printf "%s requires nextcloud >= %s/ nextcloud <= %s, but nextcloud %s is provided.\n" "$pkgname" "${_app_min_major_version}" "${_app_max_major_version}" "${_nextcloud_major_version}"
    exit 1
  fi

  local _php_version="$(php --version |head -n1 |cut -d ' ' -f2 |sed 's/.[0-9]*$//g')"
  if [[ "$(vercmp "$_php_version" "$_app_min_php" )" -lt 0 ]]; then
    printf "%s requires php >= %s, but %s is provided\n" $pkgname $_app_min_php $_php_version
    exit 1
  fi
  if [[ $_app_max_php != 'null' ]]; then
    if [[ "$(vercmp "$_php_version" "$_app_min_php" )" -lt 0 ]]; then
      printf "%s requires php <= %s, but %s is provided\n" $pkgname $_app_min_php $_php_version
      exit 1
    fi
  fi
}

package() {
  _get_nextcloud_versions
  _get_php_versions

  depends=(
    "nextcloud>=$_app_min_major_version"
    "nextcloud<$_app_max_major_version"
    "php>=$_app_min_php"
  )
  if [[ "$_app_max_php" != 'null' ]]; then
    depends+=(
      "php<=$_app_max_php"
    )
  fi

  install -vdm 755 "${pkgdir}/usr/share/webapps/nextcloud/apps/"
  cp -av "${_name}" "${pkgdir}/usr/share/webapps/nextcloud/apps/"
}
